#! /bin/bash

# loan-calc : script to calculate monthly loan payments

PROGNAME=$(basename $0)

usage () {
	cat <<- _EOF_
	Invalid use of the script.
	Usage: $PROGNAME PRINCIPAL INTEREST MONTHS

	Where:
	PRINCIPAL is the amount of the loan.
	INTEREST is te APR as a number (%7 = 0.07)
	MONTHS is the length os the loan's term.
	_EOF_
}

verify_float () {
	if [[ "$1" =~ ^[+-]?[[:digit:]]+\.?[[:digit:]]* ]]; then
		return 0
	else
		return 1
	fi
}

verify_positive_integer () {
	if [[ "$1" =~ ^[+]?[[:digit:]]+ ]]; then
		return 0
	else
		return 1
	fi
}

if (( $# == 1 )); then
	if [[ $1 == "-i" || $1 == "--interactive" ]]; then
		while true; do
			echo -n "Enter the loan value: "
			read principal
			if verify_float $principal; then
				break
			else
				echo "ERROR: a real number was expected for loan."
			fi
		done
		while true; do
			echo -n "Enter the interest value: "
			read interest
			if verify_float $interest; then
				break
			else
				echo "ERROR: a real number was expected for interest."
			fi
		done
		while true; do
			echo -n "Enter the lenght in months: "
			read months
			if verify_positive_integer $months; then
				break
			else
				echo "ERROR: an integer was expected for months."
			fi
		done
	else
		usage
		exit 1
	fi
elif (( $# == 3 )); then
	if verify_float $1; then
		principal=$1
	else
		exit 1
	fi
	if verify_float $2; then
		interest=$2
	else
		exit 1
	fi
	if verify_positive_integer $3; then
		months=$3
	else
		exit 1
	fi
else
	usage
	exit 1
fi

monthly_payment=$(bc <<- _EOF_
	scale = 10
	i = $interest / 12
	p = $principal
	n = $months
	a = p * ((i * ((1 + i) ^ n)) / (((1 + i) ^ n) - 1))
	scale = 2
	a /= 1
	a
	_EOF_
)
output=$(printf "The monthly loan payment is: %s\n" "$monthly_payment")
echo $output
